name: ci

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: write        # allow committing version bumps if you add that later
  packages: write        # push image to GHCR
  id-token: write        # OIDC-ready for cloud logins if you add them later

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-test-image:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # --- Build & test (Java; Maven or Gradle auto-detected) ---
      - name: Set up JDK
        if: hashFiles('pom.xml') != '' || hashFiles('build.gradle*') != ''
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Build & test (Maven)
        if: hashFiles('pom.xml') != ''
        run: mvn -B -DskipTests=false clean verify

      - name: Build & test (Gradle)
        if: hashFiles('build.gradle*') != ''
        uses: gradle/gradle-build-action@v3
        with:
          arguments: build

      # --- Optional Python tests if present ---
      - name: Python tests (optional)
        if: hashFiles('requirements.txt') != ''
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pytest -q

      # --- Container build & push to GHCR ---
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ github.sha }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # --- Publish built JAR (if Maven) as artifact (handy for releases) ---
      - name: Upload JAR artifact
        if: hashFiles('**/target/*.jar') != ''
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: |
            **/target/*.jar
            !**/*-sources.jar
            !**/*-javadoc.jar
